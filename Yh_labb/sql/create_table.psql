CREATE SCHEMA IF NOT EXISTS yrkesco;

SET search_path to yrkesco;


CREATE TABLE Program (
    program_id SERIAL PRIMARY KEY,
    program_name VARCHAR(100) NOT NULL,
    description VARCHAR(255)
);

CREATE TABLE Course (
    course_id SERIAL PRIMARY KEY,
    course_name VARCHAR(100) NOT NULL,
    course_code VARCHAR(20) NOT NULL,
    credits INTEGER NOT NULL,
    description VARCHAR(255)
);

CREATE TABLE ProgramCourse (
    program_id INT NOT NULL,
    course_id INT NOT NULL,
    PRIMARY KEY (program_id, course_id),
    FOREIGN KEY (program_id) REFERENCES Program(program_id),
    FOREIGN KEY (course_id) REFERENCES Course(course_id)
);

CREATE TABLE Educator (
    educator_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(20)
);

CREATE TABLE EducationalCourse (
    educator_id INT NOT NULL,
    course_id INT NOT NULL,
    PRIMARY KEY (educator_id, course_id),
    FOREIGN KEY (educator_id) REFERENCES Educator(educator_id),
    FOREIGN KEY (course_id) REFERENCES Course(course_id)
);

CREATE TABLE Campus (
    campus_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    address VARCHAR(100),
    city VARCHAR(100)
);

CREATE TABLE EducationalLeader (
    edu_leader_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(255) UNIQUE,
    phone VARCHAR(20)
);

CREATE TABLE Class (
    class_id SERIAL PRIMARY KEY,
    program_id INT REFERENCES Program(program_id),
    campus_id INT REFERENCES Campus(campus_id),
    educational_leader_id INT REFERENCES EducationalLeader(edu_leader_id)
);

CREATE TABLE ClassCourse (
    class_course_id SERIAL PRIMARY KEY,
    class_id INT,
    course_id INT,
    educator_id INT,
    start_date DATE,
    end_date DATE,
    FOREIGN KEY (class_id) REFERENCES Class(class_id),
    FOREIGN KEY (course_id) REFERENCES Course(course_id),
    FOREIGN KEY (educator_id) REFERENCES Educator(educator_id)
);

CREATE TABLE Student (
    student_id SERIAL PRIMARY KEY,
    class_id INT REFERENCES Class(class_id),
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(255) UNIQUE
);

CREATE TABLE StudentInfo (
    student_id INT PRIMARY KEY REFERENCES Student(student_id),
    social_security_number VARCHAR(12)
);

CREATE TABLE ConsultantCompany (
    consultant_company_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    org_number VARCHAR(50),
    tax_status BOOLEAN,
    hourly_rate NUMERIC,
    address VARCHAR(100)
);

CREATE TABLE Consultant (
    consultant_id SERIAL PRIMARY KEY,
    consultant_company_id INT REFERENCES ConsultantCompany(consultant_company_id)
);
