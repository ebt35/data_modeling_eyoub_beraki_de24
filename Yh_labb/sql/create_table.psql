DROP SCHEMA IF EXISTS yrkesco CASCADE;
CREATE SCHEMA yrkesco;
SET search_path TO yrkesco;


CREATE TABLE EducationLeader (
    leader_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(20) UNIQUE NOT NULL
);

CREATE TABLE Campus (
    campus_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    location VARCHAR(255) NOT NULL
);

CREATE TABLE Program (
    program_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    leader_id INTEGER NOT NULL REFERENCES EducationLeader(leader_id)
);

CREATE TABLE Course (
    course_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    credits INTEGER NOT NULL CHECK (credits > 0)
);

CREATE TABLE ProgramCourse (
    program_id INTEGER NOT NULL REFERENCES Program(program_id),
    course_id INTEGER NOT NULL REFERENCES Course(course_id),
    PRIMARY KEY (program_id, course_id)
);

CREATE TABLE Educator (
    educator_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    specialization VARCHAR(100)
);

CREATE TABLE EducationalCourse (
    educator_id INTEGER NOT NULL REFERENCES Educator(educator_id),
    course_id INTEGER NOT NULL REFERENCES Course(course_id),
    PRIMARY KEY (educator_id, course_id)
);

CREATE TABLE ConsultantCompany (
    organization_nr VARCHAR(12) PRIMARY KEY,
    company_name VARCHAR(100) NOT NULL,
    f_tax BOOLEAN NOT NULL,
    phone VARCHAR(20) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE Consultant (
    consultant_id SERIAL PRIMARY KEY,
    educator_id INTEGER NOT NULL REFERENCES Educator(educator_id),
    organization_nr VARCHAR(12) NOT NULL REFERENCES ConsultantCompany(organization_nr),
    name VARCHAR(100) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE Class (
    class_id SERIAL PRIMARY KEY,
    course_id INTEGER NOT NULL REFERENCES Course(course_id),
    instructor_id INTEGER NOT NULL REFERENCES Educator(educator_id),
    campus_id INTEGER NOT NULL REFERENCES Campus(campus_id),
    schedule VARCHAR(100) NOT NULL,
    room VARCHAR(50) NOT NULL
);

CREATE TABLE ClassCourse (
    class_id INTEGER NOT NULL REFERENCES Class(class_id),
    course_id INTEGER NOT NULL REFERENCES Course(course_id),
    PRIMARY KEY (class_id, course_id)
);

CREATE TABLE Student (
    student_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    enrollment_date DATE NOT NULL
);

CREATE TABLE StudentInfo (
    social_security_nr VARCHAR(12) PRIMARY KEY,
    student_id INTEGER NOT NULL UNIQUE REFERENCES Student(student_id),
    address_id INTEGER NOT NULL,
    phone VARCHAR(20) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);

-- Enrollment (missing in diagram but logically needed)
CREATE TABLE Enrollment (
    enrollment_id SERIAL PRIMARY KEY,
    class_id INTEGER NOT NULL REFERENCES Class(class_id),
    student_id INTEGER NOT NULL REFERENCES Student(student_id),
    enrollment_date DATE NOT NULL,
    UNIQUE(class_id, student_id)
);
